@model ResponseModel<EC_Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/E_Commerce/Views/Shared/_Layout.cshtml";
}


<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Product</h1>
            </div>
            <div class="col-sm-6">
                <div class="float-sm-right">
                    @if (Model.IsCreate == true)
                    {
                        <button type="button" id="btnAddNewItem" class="btn btn-primary btn-md pull-right mr-2 divformSave_Hide" onclick="fnLoadParialView('divformSave', '@Url.Action("Partial_AddEditForm","Product", new {  area = "Admin" })');">
                            <i class="fas fa-plus"></i> &nbsp; Add new item
                        </button>
                    }
                    <button type="button" id="btnBackToList" class="btn btn-warning btn-md pull-right mr-2 divformSave_Display d-none" onclick="fnBackToList();">
                        <i class="fas fa-arrow-left"></i> &nbsp; Back To List
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row no-gooters">
            <section class="col-md-12">
                <div class="card">
                    <div class="card-header divformSave_Display d-none" style="margin: 5px !important;">
                        <form id="formSave" action="@Url.Action("Save","Product", new {  area = "Admin"})" method="post">
                            <div class="row no-gutters" id="divformSave"></div>
                            <div class="clearfix"></div>
                            <hr />
                        </form>
                    </div>

                    <div class="card-body">
                        <div class="row no-gooters">
                            <div class="col-md-12 my-1">
                                <table id="table_Common_SrNo" class="table table-bordered table-striped divformSave_Hide">
                                    <thead>
                                        <tr><th class="no_sorting">#</th><th>Product</th><th>Category</th><th width="5%">Base Price</th><th width="5%">Sale Price</th><th width="5%">Varient</th><th width="5%">Status</th><th>Action</th></tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ObjList.OrderBy(x => x.Id))
                                        {
                                            <tr>
                                                <td></td>
                                                <td>@item.Name</td>
                                                <td>@item.CategoryName</td>
                                                <td>@item.BasePrice</td>
                                                <td>@item.SalePrice</td>
                                                <td>@item.CategoryId</td>
                                                <td class="text-center"><span class="badge bg-@(item.IsActive == true ? "success" : "danger")">@(item.IsActive == true ? "Active" : "Inactive")</span></td>
                                                <td>
                                                    <div class="btn-group">
                                                        @if (Model.IsUpdate == true)
                                                        {
                                                            <button type="button" class="btn btn-info btn-sm btn-flat" data-toggle="tooltip" data-placement="top" title="Edit"
                                                                    onclick="fnLoadParialView('divformSave', '@Url.Action("Partial_AddEditForm","Product", new {  area = "Admin" })?Id=@item.Id');">
                                                                <i class="far fa-edit"></i>
                                                            </button>
                                                        }
                                                        @if (Model.IsDelete == true && item.IsDeleted == false)
                                                        {
                                                            <button type="button" class="btn btn-danger btn-sm btn-flat ml-2" data-toggle="tooltip" data-placement="top" title="Delete"
                                                                    onclick="fnDelete_Confirm('@Url.Action("DeleteConfirmed","Product", new {  area = "Admin" })?Id=@item.Id');">
                                                                <i class="far fa-trash-alt"></i>
                                                            </button>
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</section>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

        });

        function showPreview($this) {
            debugger;
            if (typeof $($this).val() != 'undefined' && $($this).val() != null && $($this).val() != '') {
                var validExtensions = ['jpg', 'jpeg', 'png']; //array of valid extensions
                var fileName = $($this)[0].files[0].name;
                var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);

                if ($.inArray(fileNameExt.toLowerCase(), validExtensions) > -1) {

                    if (($($this)[0].files[0].size / 1048576) > 1) {
                        CommonAlert_Error("Maximum Size of Image should be within 1 MB.");
                        return false
                    }
                    else {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $("#" + $($this).attr('name') + "_preview").attr("src", e.target.result);
                            uploadImage();
                        }
                        reader.readAsDataURL($($this)[0].files[0]);
                    }
                } else {
                    CommonAlert_Error("Upload image in PNG, JPG or JPGE Format Only.");
                }
            }
        }

        function fnAdd_Varient() {

            debugger;

            var lastAttribute = $('#tblVarient tbody tr:last select').val();

            var count = $('#tblVarient tbody tr').length;

            if (count == 0 || (typeof lastAttribute != 'undefined' && lastAttribute != null && lastAttribute != '' && lastAttribute.length > 0)) {

                var strHtml = $('#tblVarient thead tr.temp').html();

                strHtml = strHtml.replaceAll('_X', count);
                strHtml = strHtml.replaceAll('fnChange_Attribute(0)', 'fnChange_Attribute(' + count + ')');

                $('#tblVarient tbody').append('<tr>' + strHtml + '</tr>');

                $('#tblVarient tbody tr:last').removeAttr('hidden');
                $('#tblVarient tbody tr:last').removeClass('temp');
                $('#tblVarient tbody tr select').addClass('select2');
                $('#tblVarient tbody tr select.select2').select2();

                $('#tblVarient tbody tr input#inputId_' + count).val(count);
                $('#tblVarient tbody tr input#inputId_' + count).trigger('change');

                $('#tblVarient tbody tr input#inputAttributeValue_' + count).attr('data-required');
                $('#tblVarient tbody tr input#inputAttributeValue_' + count).attr('data-msg');
                $('#tblVarient tbody tr input#inputAttributeValue_' + count).attr('data-msg', 'Select one or more Attribute(s).');

            }

        }

        function fnChange_Attribute($SrNo) {
            debugger;

            var selectedValue = $('#selectAttributeValue_' + $SrNo).val();

            if (typeof selectedValue != 'undefined' && selectedValue != null && selectedValue != '' && selectedValue.length > 0)
                $('#inputAttributeValue_' + $SrNo).val(selectedValue.join('#'));
            else
                $('#inputAttributeValue_' + $SrNo).val('');

            $('#inputId_' + $SrNo).val($SrNo);
            $('#inputId_' + $SrNo).trigger('change');
            $('#inputAttributeValue_' + $SrNo).trigger('change');

        }

        function fnDelete_Varient($this) {
            debugger;
            $($this).parents("tr").addClass('d-none');
            $($this).parents("tr").find('input[type="checkbox"]').prop('checked', true);
            $($this).parents("tr").find('input[type="checkbox"]').trigger('change');
        }

        function fnSubmitForm_Success(response, $id) {
            debugger;

            fnLoadParialView('divformSave', '@Url.Action("Partial_AddEditForm","Product", new {  area = "Admin" })?Id=' + response.Data1);
        }
    </script>
}


